<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="com.domain.*">
		<!--Spring MVC @Transactional注解方式事务失效的解决办法
			blog.csdn.net/z69183787/article/details/37819831
			Spring 初始化2次 解决办法 Component
			http://www.codesenior.com/en/tutorial/Spring-MVC-Beans-Loaded-Twice-Problem
			-->
		<!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />-->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<mvc:default-servlet-handler/>

	<beans:bean id="configProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="locations">
			<beans:list>
				<beans:value>classpath:com/domain/config/properties/jdbc.properties</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- 1 DBMS Connection start -->
	<beans:bean id="TEST" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory"></beans:constructor-arg>
	</beans:bean>

	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="myDatasource"></beans:property>
		<beans:property name="mapperLocations" value="classpath:sqlMap/**/*.xml"></beans:property>
	</beans:bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="myDatasource" />
	</beans:bean>

	<beans:bean id="myDatasource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<beans:constructor-arg ref="myDatasourceSpied"></beans:constructor-arg>
		<beans:property name="logFormatter">
			<beans:bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<beans:property name="loggingType" value="MULTI_LINE" ></beans:property>
				<beans:property name="sqlPrefix" value="########## SQL #########:  "></beans:property>
			</beans:bean>
		</beans:property>
	</beans:bean>


	<beans:bean name="myDatasourceSpied" class="org.apache.commons.dbcp.BasicDataSource">
		<beans:property name="driverClassName" value="${jdbc.driverClassName}"></beans:property>
		<beans:property name="url" value="${jdbc.url}"></beans:property>
		<beans:property name="username" value="${jdbc.username}"></beans:property>
		<beans:property name="password" value="${jdbc.password}"></beans:property>
	</beans:bean>

	<!-- 1 DBMS Connection end -->


	<!--
		spring版本为3.1.1时
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.13</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>1.9.13</version>
		</dependency>
	-->
	<!--
		spring版本为4.3.7时
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.8.6</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.8.6</version>
		</dependency>
	-->

	<!--<beans:bean name="jsonView" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"></beans:bean>&lt;!&ndash;	spring版本为3.1.1时&ndash;&gt;-->
	<beans:bean name="defaultJsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"></beans:bean><!--	spring版本为4.3.7时-->

	<beans:bean id="mappingJacksonHttpMessageConverter"
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<beans:property name="supportedMediaTypes">
			<beans:list>
				<beans:value>text/html;charset=UTF-8</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean
			class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<!--<beans:bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"></beans:bean>-->
				<beans:ref bean="mappingJacksonHttpMessageConverter"/>
			</beans:list>
		</beans:property>
	</beans:bean>


	<!--  =======================================定时执行任务====================================  -->
	<!-- 工作的bean -->
	<bean id="myJob" class="com.domain.test.job.TimedTask" />

	<!-- job的配置开始 -->
	<bean id="myJobDetail"
		  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="myJob" />
		</property>
		<property name="targetMethod">
			<value>execute</value>
		</property>
	</bean>
	<!-- job的配置结束 -->


	<!-- 调度的配置开始 -->
	<bean id="crontestJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="myJobDetail" />
		</property>
		<property name="cronExpression">
			<value>* * * * * ?</value>
		</property>
	</bean>
	<!-- 调度的配置结束 -->


	<!-- 启动触发器的配置开始 -->
	<bean name="startQuertz" lazy-init="false" autowire="no"
		  class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="crontestJobTrigger" />

			</list>
		</property>
	</bean>
	<!-- 启动触发器的配置结束 -->
	<!--  =======================================定时执行任务====================================  -->

</beans:beans>

<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="com.domain.*">
		<!--Spring MVC @Transactional注解方式事务失效的解决办法
			blog.csdn.net/z69183787/article/details/37819831-->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
	</context:component-scan>

	<annotation-driven />
	<!--	======================================Spring MVC静态资源处理	-->
	<mvc:default-servlet-handler/>
	<!--	======================================Spring MVC静态资源处理	-->


	<!--	======================================拦截器	-->
	<interceptors>
		<interceptor>
			<mapping path="/admin/*" />
			<beans:bean class="com.domain.util.CommonIntercepter" />  <!--CommonIntercepter-->
		</interceptor>
		<!-- 可以追加 拦截器 -->
        <!--<interceptor>-->
        <!--<mapping path="/admin/board_write"/>-->
        <!--<beans:bean class="com.spring.interceptor.AdminInterCeptor"/>-->
        <!--</interceptor>-->
		<!-- 可以追加 拦截器 -->

	</interceptors>
	<!--	======================================拦截器	-->

	<!-- ======================================AOP setting for Logging -->
	<!--	xmlns:aop="http://www.springframework.org/schema/aop"
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd	-->
	<!--<beans:bean id="logAspect" class="com.ourq.common.aop.LoggingAspect" />-->

	<!--&lt;!&ndash; AOP setting for Logging Before method call  &ndash;&gt;-->
	<!--<aop:config>-->
	<!--<aop:aspect id="aspectLoggging" ref="logAspect">-->
	<!--<aop:pointcut id="pointCutSet" expression="execution(* com.hw.call..*.service..*(..))" />-->
	<!--<aop:before method="logBefore" pointcut-ref="pointCutSet" />-->
	<!--</aop:aspect>-->
	<!--</aop:config>-->

	<!-- ======================================AOP setting for Logging -->

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!--	======================================上传文件	-->
	<!--	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />	-->




</beans:beans>
